# ---
# - name: Create and Update ServiceNow Incident from AWX  # Playbook to create and update an incident in ServiceNow
#   hosts: localhost
#   gather_facts: no

#   vars:
#     # servicenow_username: "admin"  # Replace with actual username (consider using Ansible Vault for security)
#     # servicenow_password: "u$SZfmgT7%8K"  # Store securely instead of hardcoding (e.g., in Ansible Vault)
#     servicenow_username: "pallavbadhiyal"  # Replace with actual username (consider using Ansible Vault for security)
#     servicenow_password: "Admin@123"  # Store securely instead of hardcoding (e.g., in Ansible Vault)


#   tasks:
#     - name: Create an incident in ServiceNow  # Task to create an incident in the ServiceNow instance
#       servicenow.servicenow.snow_record:
#         instance: "dev221333"  # ServiceNow instance name (without '.service-now.com')
#         username: "{{ servicenow_username }}"  # Use defined username variable
#         password: "{{ servicenow_password }}"  # Use defined password variable
#         table: "incident"  # ServiceNow table where the record will be created
#         state: "present"  # Ensures the record is created if it doesn't exist
#         data:
#           short_description: "Ansible AWX triggered incident"  # Description of the incident
#           severity: "2"  # Severity level (1 = Critical, 2 = High, etc.)
#           urgency: "2"  # Urgency level
#           impact: "2"  # Impact level
#           caller_id: "{{ servicenow_username }}"  # Assign the incident to the user creating it
#       register: snow_response  # Store the API response for further use

#     - name: Show incident details  # Debug task to display the created incident number
#       debug:
#         msg: "Incident {{ snow_response.record.number }} created successfully"  # Prints the incident number

#     - name: Update incident work notes in ServiceNow  # Task to add a work note to the created incident
#       servicenow.servicenow.snow_record:
#         instance: "dev221333"
#         username: "{{ servicenow_username }}"
#         password: "{{ servicenow_password }}"
#         table: "incident"
#         state: "present"
#         number: "{{ snow_response.record.number }}"  # Reference the newly created incident number
#         data:
#           work_notes: "Updated via Ansible AWX playbook - Investigation in progress."  # Work note message
#       when: snow_response.record.number is defined  # Ensure an incident was created before updating it

---
- name: Collect Cisco Info & Update ServiceNow
  hosts: cisco_devices  # Ensure your inventory has this group
  gather_facts: no
  vars:
    servicenow_instance: "dev221333"
    servicenow_username: "admin"
    servicenow_password: "u$SZfmgT7%8K"

  tasks:
    - name: Collect 'show version' from Cisco
      ios_command:
        commands: show version
      register: show_version

    - name: Collect 'show ip interface brief' from Cisco
      ios_command:
        commands: show ip interface brief
      register: show_interfaces

    - name: Parse 'show version' using TextFSM
      set_fact:
        parsed_version: "{{ show_version.stdout[0] | parse_cli_textfsm('templates/show_version.textfsm') }}"

    - name: Parse 'show ip interface brief' using TextFSM
      set_fact:
        parsed_interfaces: "{{ show_interfaces.stdout[0] | parse_cli_textfsm('templates/show_ip_interface_brief.textfsm') }}"

    - name: Format Data for ServiceNow
      set_fact:
        snow_update:
          - "### Device Report ###"
          - "**Hostname:** {{ parsed_version[0]['hostname'] }}"
          - "**Model:** {{ parsed_version[0]['hardware'] }}"
          - "**IOS Version:** {{ parsed_version[0]['version'] }}"
          - "**Interfaces:**"
          - "{{ parsed_interfaces | map(attribute='interface') | list | join(', ') }}"
      register: formatted_notes

    - name: Update ServiceNow Incident Notes
      servicenow.servicenow.snow_record:
        instance: "{{ servicenow_instance }}"
        username: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        table: "incident"
        state: "present"
        data:
          work_notes: "{{ formatted_notes.ansible_facts.snow_update | join('\n') }}"
      register: snow_response

    - name: Confirm ServiceNow Update
      debug:
        msg: "ServiceNow Incident updated with device details!"
